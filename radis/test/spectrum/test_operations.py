# -*- coding: utf-8 -*-
"""
Created on Sun Aug  5 14:26:44 2018

@author: erwan
"""

from __future__ import print_function, absolute_import, division, unicode_literals
from radis.tools.database import load_spec
from radis.test.utils import getTestFile
import pytest

@pytest.mark.fast
def test_crop(verbose=True, *args, **kwargs):
    ''' Test that update can correctly recompute missing quantities '''

    # 1) A crop example in the same unit as the one stored

    # Work with a Spectrum object that was generated by Specair
    s = load_spec(getTestFile('N2C_specair_380nm.spec'))
    # Focus on N2(C->B), v'=0, v''=2 band:
    s.crop(376, 381, 'nm')
    
    w = s.get_wavelength()
    assert w.min() >= 360
    assert w.max() <= 382
    
    # 2) A crop example in different unit as the one stored

    # Work with a Spectrum object that was generated by Specair
    s = load_spec(getTestFile('CO_Tgas1500K_mole_fraction0.01.spec'), binary=True)
    # Focus on N2(C->B), v'=0, v''=2 band:
    s.crop(4530, 4533, 'nm', 'air')
    
    w = s.get_wavelength(medium='air')
    assert w.min() >= 4530
    assert w.max() <= 4533
    
    return True



def _run_testcases(verbose=True, warnings=True, *args, **kwargs):
    ''' Test procedures
    '''

    test_crop(verbose=verbose, *args, **kwargs)
    return True

if __name__ == '__main__':
    
    print('Testing operations:', _run_testcases(verbose=True))